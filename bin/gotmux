#!/bin/bash
SESSION=$USER
TOPLEFT="${SESSION}-tl"
TOPRIGHT="${SESSION}-tr"
BOTTOMLEFT="${SESSION}-bl"
BOTTOMRIGHT="${SESSION}-br"

####################################################
#                                                  #
#                Create sub-sessions               #
#                                                  #
####################################################

function create_subsessions {

    # Create top-left session and embed in top-left window
    tmux -2 new-session -d -s $TOPLEFT

    # Rename main window
    tmux rename-window -t $TOPLEFT:0 'tl'

    # Run Vim
    tmux send-keys 'vim' C-m
    tmux send-keys '\ww'
    tmux send-keys ':VimwikiGoto Tasks' C-m
    tmux send-keys ':set nospell' C-m
    tmux send-keys ':set nowrap' C-m
    tmux send-keys '@l' C-m
    tmux send-keys '@s' C-m
    tmux send-keys 'gg/Today' C-m
    tmux send-keys ':noh' C-m
    tmux send-keys ':set sw=2 ts=2 sts=2 foldmethod=indent foldlevel=1' C-m
    tmux send-keys 'z' C-m

    # Create top-left session and embed in top-left window
    tmux -2 new-session -d -s $TOPRIGHT

    # Rename main window
    tmux rename-window -t $TOPRIGHT:0 'tr'

    # Create top-left session and embed in top-left window
    tmux -2 new-session -d -s $BOTTOMLEFT

    # Rename main window
    tmux rename-window -t $BOTTOMLEFT:0 'bl'

    # Run ssh
    tmux send-keys 'ssh trigarbit' C-m
    sleep 2
    tmux send-keys 'tmux attach -d' C-m

    # Create top-left session and embed in top-left window
    tmux -2 new-session -d -s $BOTTOMRIGHT

    # Rename main window
    tmux rename-window -t $BOTTOMRIGHT:0 'br'

}

####################################################
#                                                  #
#                Create main session               #
#                                                  #
####################################################

function create_mainsession {
    # Create main tmux session
    tmux -2 new-session -d -s $SESSION -x "$(tput cols)" -y "$(tput lines)"

    # Rename main window
    tmux rename-window -t $SESSION:0 'master'

    # Split vertically
    tmux split-window -v -t $SESSION:0

    # Reduce height of lower pane
    tmux resize-pane -t $SESSION:0.1 -y 23

    # Select top half and split horizontally
    tmux select-pane -t 0
    tmux split-window -h

    # Select bottom half and split horizontally
    tmux select-pane -t 2
    tmux split-window -h

    # Windows should now look like
    # 0 | 1
    # -----
    # 2 | 3

}

####################################################
#                                                  #
#                Attach sub-sessions               #
#                                                  #
####################################################

function attach_subsessions {

    # Select top left pane
    tmux select-pane -t $SESSION:0.0

    # Create embedded tmux session
    tmux send-keys 'tmux attach -t ' $TOPLEFT C-m

    # Select top right pane
    tmux select-pane -t $SESSION:0.1

    # Create embedded tmux session
    tmux send-keys 'tmux attach -t ' $TOPRIGHT C-m

    # Select bottom left pane
    tmux select-pane -t $SESSION:0.2

    # Create embedded tmux session
    tmux send-keys 'tmux attach -t ' $BOTTOMLEFT C-m

    # Select bottom right pane
    tmux select-pane -t $SESSION:0.3

    # Create embedded tmux session
    tmux send-keys 'tmux attach -t ' $BOTTOMRIGHT C-m

    # Reduce width of top right pane
    tmux resize-pane -t $SESSION:0.0 -x 53

}

####################################################
#                                                  #
#                Attach main-session               #
#                                                  #
####################################################

function attach_mainsession {
    tmux -2 attach-session -t $SESSION
}

####################################################
#                                                  #
#                Dancer session                    #
#                                                  #
####################################################

function perl_dancer {
    # Select top left pane
    tmux select-window -t "$TOPRIGHT:0"
    tmux select-pane -t "$TOPRIGHT:0.0"

    # Set current directory
    cd $DIR

    # Create new window
    tmux new-window -t $TOPRIGHT -n "${NAME}-perl" -c $DIR

    # Run website
    tmux send-keys -t "$TOPRIGHT:${NAME}-perl" 'perl bin/app-devel.pl' C-m

    # Create new editing windows
    tmux new-window -t $TOPRIGHT -n "${NAME}-1" -c $DIR
    tmux new-window -t $TOPRIGHT -n "${NAME}-2" -c $DIR

    # Select tw-1 as current window
    tmux select-window -t "$TOPRIGHT:${NAME}-1"
    tmux send-keys -t "$TOPRIGHT:${NAME}-1" "export PATH=\"$PATH:$DIR\"" C-m
    tmux send-keys -t "$TOPRIGHT:${NAME}-1" 'clear && git pull' C-m
}

####################################################
#                                                  #
#                Dancer2 session                   #
#                                                  #
####################################################

function perl_dancer_new {
    # Select top left pane
    tmux select-window -t "$TOPRIGHT:0"
    tmux select-pane -t "$TOPRIGHT:0.0"

    # Set current directory
    cd $DIR

    # Create new window
    tmux new-window -t $TOPRIGHT -n "${NAME}-plackup" -c $DIR

    # Run website
    tmux send-keys -t "$TOPRIGHT:${NAME}-plackup" '/usr/bin/perl /usr/bin/plackup -r bin/app.psgi -R config.yml -R lib/' C-m

    # Create new editing windows
    tmux new-window -t $TOPRIGHT -n "${NAME}-1" -c $DIR
    tmux new-window -t $TOPRIGHT -n "${NAME}-2" -c $DIR

    # Select tw-1 as current window
    tmux select-window -t "$TOPRIGHT:${NAME}-1"
    tmux send-keys -t "$TOPRIGHT:${NAME}-1" "export PATH=\"$PATH:$DIR\"" C-m
    tmux send-keys -t "$TOPRIGHT:${NAME}-1" 'clear && git pull' C-m
}

####################################################
#                                                  #
#                Kill dancer session               #
#                                                  #
####################################################

function kill_dancer {
    PID=$(ps -C perl -o "pid=")

    if [ -z "$PID" ]; then
        return
    fi

    CMD=$(ps -p $PID -o "cmd=")

    if [ "$CMD" = "perl bin/app-devel.pl" ]; then
        kill $PID
        tmux select-window -t "$TOPRIGHT:0"
        tmux select-pane -t "$TOPRIGHT:0.0"
        tmux kill-window -a -t "$TOPRIGHT:0.0"
    elif [ "$CMD" = "/usr/bin/perl /usr/bin/plackup -r bin/app.psgi -R config.yml -R lib/" ]; then
        kill $PID
        tmux select-window -t "$TOPRIGHT:0"
        tmux select-pane -t "$TOPRIGHT:0.0"
        tmux kill-window -a -t "$TOPRIGHT:0.0"
    fi

    return
}

####################################################
#                                                  #
#                Run Main Program                  #
#                                                  #
####################################################

case "$1" in

    killdancer )
        kill_dancer
    ;;

    tridentweb )
        kill_dancer

        DIR="/home/cjr/gits/dancer/tridentweb"
        NAME="tw"

        perl_dancer
    ;;

    stocklist )
        kill_dancer

        DIR="/home/cjr/gits/dancer/stocklist"
        NAME="sl"

        perl_dancer
    ;;

    budgets )
        kill_dancer

        DIR="/home/cjr/gits/dancer/budgets"
        NAME="bu"

        perl_dancer
    ;;

    salesmanager2 )
        kill_dancer

        DIR="/home/cjr/gits/dancer2/salesmanager2"
        NAME="sm"

        perl_dancer_new
    ;;

    shortener )
        kill_dancer

        DIR="/home/cjr/gits/dancer2/shortener"
        NAME="sh"

        perl_dancer_new
    ;;

    *)
        create_subsessions
        create_mainsession
        attach_subsessions
        attach_mainsession
    ;;

esac



